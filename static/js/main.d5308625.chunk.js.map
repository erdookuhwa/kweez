{"version":3,"sources":["firebase.js","QuizBlob.js","ListQuizzes.js","NewQuiz.js","Chart.js","Question.js","ViewQuiz.js","CreatedQuiz.js","AddQuestions.js","Navbar.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","withRouter","props","className","onClick","history","push","id","title","description","ListQuizzes","useState","quizzes","setQuizzes","setLoading","db","firestore","collection","useEffect","onSnapshot","querySnapshot","items","forEach","doc","combined","data","quizEl","map","quiz","console","log","setTitle","desc","setDesc","onSubmit","e","preventDefault","add","then","name","placeholder","onChange","target","value","maxLength","Chart","labels","datasets","label","score","backgroundColor","classAverage","options","display","text","scales","yAxes","ticks","min","max","nQuestions","stepSize","xAxes","barThickness","width","height","Question","option","correct","incrementScore","goToNextQuestion","isCorrect","question","ViewQuiz","useParams","questions","setQuestions","currentQuestion","setCurrentQuestion","finalScore","setFinalScore","setScore","hasSavedScore","setHasSavedScore","resultDB","setPerc","docs","perc","reduce","cum","curr","result","length","percentile","filter","obj","handleGetNextQuestion","nextQuestion","allQuestions","q","CreatedQuiz","AddQuestions","newQuestion","setNewQuestion","setOptions","setCorrect","addedQuestions","setAddedQuestions","numberOfQuestions","setNumberOfQuestions","createQuiz","setCreateQuiz","questionDB","snap","displayAddedQuestions","optionElements","i","s","copyOptions","updateOption","pop","Navbar","basename","href","class","to","exact","path","style","position","bottom","left","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5308625.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCwNjhN9g5LOiic1RpFBO1dJffZxEqS1qE\",\n    authDomain: \"kwiz-b9f61.firebaseapp.com\",\n    databaseURL: \"https://kwiz-b9f61.firebaseio.com\",\n    projectId: \"kwiz-b9f61\",\n    storageBucket: \"kwiz-b9f61.appspot.com\",\n    messagingSenderId: \"728113109456\",\n    appId: \"1:728113109456:web:4e02abec38d8b4bf6781d5\",\n    measurementId: \"G-5ZM3GCL5MB\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react'\nimport { withRouter } from 'react-router-dom';\n\n\nfunction QuizBlob(props) {\n    \n    const handleLink = () => {\n        props.history.push(`/quiz/${props.id}`)\n      }\n\n    return (\n        <div className=\"container\" onClick={handleLink}>\n            {/* row, col=s12 l6 */}\n            <div className=\"\">\n                <div className=\"\">  \n                    <div className=\"card center amber\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">{props.title}</span>\n                            <p className=\"grey-text text-darken-2\">{props.description}</p>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default withRouter(QuizBlob);","import React, { useState, useEffect } from 'react'\nimport firebase from './firebase'\nimport QuizBlob from './QuizBlob'\n\nfunction ListQuizzes(props) {\n\n    const [quizzes, setQuizzes] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    // make reference call to db to get all saved quizzes\n    const db = firebase.firestore().collection(\"quizzes\");\n\n    // function to get all quizzes in this collection\n    function getQuizzes() {\n        setLoading(true);\n        db.onSnapshot((querySnapshot) => {\n            const items = [];\n            querySnapshot.forEach((doc) => {\n                let combined = doc.data();\n                combined.id = doc.id;\n                items.push(combined);\n            });\n            setQuizzes(items);\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getQuizzes();\n    }, [])\n\n    let quizEl = quizzes.map((quiz) => <QuizBlob {...quiz} />)\n\n    return (\n        <div>\n            {quizEl}\n        </div>\n    )\n}\n\n\nexport default ListQuizzes;","import React, { useState, useEffect } from 'react'\nimport firebase from './firebase'\nimport { withRouter } from 'react-router-dom'\nimport './App.css'\n\nfunction NewQuiz(props) {\n    console.log('calling NewQuiz', {props})\n\n    // make reference call to db where I want new quizzes to be saved to\n    const db = firebase.firestore();\n\n    // Make states for user's input\n    const [title, setTitle] = useState('')\n    const [desc, setDesc] = useState('')\n\n\n    // make function to handle submit form\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        db.collection('quizzes').add({\n            title: title,\n            description: desc\n        }).then(doc => {\n            props.history.push(`/newquiz/${doc.id}/addquestions`)\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <form id=\"quiz-form\" onSubmit={handleFormSubmit}>\n                <h5>Quiz Title: </h5><input name=\"title\" placeholder=\"Enter your quiz title\" onChange={e => setTitle(e.target.value)}></input>\n                <h5>Description: </h5><textarea maxLength=\"100\" name=\"description\" placeholder=\"Enter short description for your quiz\" onChange={e => setDesc(e.target.value)}></textarea>\n                <button className=\"btn waves-effect waves-light\">Continue to enter questions</button>\n            </form> \n        </div> \n    )\n}\n\nexport default withRouter(NewQuiz);","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\n\n// function to plot chart results upon quiz completion\nfunction Chart( { score, classAverage, nQuestions } ) {\n\n    const data = {\n        labels: ['You VS Class'],\n        datasets: [\n            {\n                label: 'Your Score',\n                data: [score],\n                backgroundColor: [\n                    'rgba(255, 99, 132)'\n                ]\n            },\n            {\n                label: 'Class Average',\n                data: [classAverage],\n                backgroundColor: [\n                    'rgba(54, 162, 235)'\n                ]\n            }\n        ]\n    }\n\n    const options = {\n        title: {\n            display: true,\n            text: 'Bar Chart for Quiz'\n        },\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        min: 0,\n                        max: nQuestions,\n                        stepSize: 0.5\n                    }\n                }\n            ],\n            xAxes: [\n                {\n                    barThickness: 'flex'\n                }\n            ]\n        }\n    }\n\n    return (\n        <div className=\"chart\">\n            <Bar \n                data={data}\n                width={100}\n                height={50}\n                options={options}\n            />\n        </div>\n    )\n}\n\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport './App.css'\n\nfunction Question(props) {\n\n    // make fxn to check if selected option is correct\n    function isCorrect(option) {\n        if (props.correct === option) {\n            props.incrementScore();\n        } else {\n            console.log('incorrect!')\n        }\n        // go to the next question\n        props.goToNextQuestion();\n    }\n\n    const options = props.options.map(option => <div className=\"card lime lighten-2 z-depth-3\" onClick={() => isCorrect(option)}>\n        <div className=\"card-action activator\">{option}</div>\n        </div>)\n\n    return (\n        <div className=\"container\">\n            <div>\n                <span className=\"card-title center\">{props.question}</span>\n                <ul>\n                    <li>{options}</li>\n                </ul>\n                {/* <h6>{props.correct}</h6> */}\n            </div>\n        </div>\n        \n    )\n}\n\n\nexport default Question;","import React, { useState, useEffect } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport Chart from './Chart'\nimport { useParams } from 'react-router-dom'\nimport firebase from './firebase'\nimport Question from './Question'\nimport './App.css'\n\nfunction ViewQuiz(props) {\n\n    let { id } = useParams()\n\n\n    // LOGIC FOR NAVIGATING THRU THE QUESTIONS\n    // Set states for dynamically updating values\n    const [questions, setQuestions] = useState([])\n    const [currentQuestion, setCurrentQuestion] = useState(0)   // manages state for the current question user is attempting\n    const [finalScore, setFinalScore] = useState(false)   // manages logic responsible for displaying the score at the end of the quiz\n    const [score, setScore] = useState(0)   // managing scoreboard for each correct question\n    const [hasSavedScore, setHasSavedScore] = useState(false)\n\n\n    // function to get all the questions in this quiz id to load on page\n    function getQuiz() {\n        const qRef = firebase.firestore().collection(`quizzes/${id}/questions`)\n        qRef.onSnapshot((querySnapshot) => {\n            const items = [];\n            querySnapshot.forEach((doc) => {\n                items.push(doc.data());\n            });\n            setQuestions(items)\n        })\n    }\n\n    const resultDB = firebase.firestore()\n\n    // make function to handle all quiz takers' scores\n    const saveResult = () => {\n        resultDB.collection(`quizzes/${id}/results`).add({\n            result: score\n        }).then(doc => {\n        })\n    }\n\n    function getResults() {\n        const resDB = firebase.firestore().collection(`quizzes/${id}/results`)\n        resDB.onSnapshot((querySnapshot) => {\n            setPerc( querySnapshot.docs.map(doc => doc.data()) )\n        })\n    }\n\n    useEffect(() => {\n        getQuiz();\n        getResults();\n    }, [id])\n\n\n    const [perc, setPerc] = useState([])\n\n    let sum, classAverage;\n    sum = perc.reduce((cum, curr) => cum+curr.result, 0)\n    classAverage = sum / perc.length\n    console.log(perc.length)\n    console.log(`Class average is ${classAverage}`)\n\n    // WHEN CALCULATING PERCENTILE, USE <= yourScore... also, include count of # of people with the same scores\n    let belowYourScore = perc.filter( (obj) => obj.result <= score )\n    let percentile = belowYourScore.length / perc.length * 100\n\n    // make fxn to increment score\n    const incrementScore = () => {\n        setScore(score + 1)\n    }\n\n    // make function to display next question\n    const handleGetNextQuestion = (props) => {  \n        const nextQuestion = currentQuestion + 1\n        if (nextQuestion < questions.length) {\n            setCurrentQuestion(nextQuestion)\n        } else {\n            setFinalScore(true);\n        }\n    };\n\n    const allQuestions = questions.map((q) => (\n        <Question incrementScore={incrementScore} goToNextQuestion={handleGetNextQuestion} {...q} />\n    ))\n\n\n    if (finalScore && !hasSavedScore) {\n        saveResult();\n        setHasSavedScore(true);\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"viewquiz-app\">\n                {finalScore ? (\n                    <div className=\"card amber z-depth-3 center\">\n                        <div className=\"card-content center\"><h5>Your final score is {score} / {allQuestions.length}</h5></div>\n                        <div>Class average score on this quiz is <strong><em>{classAverage}</em></strong></div>\n                        <div>You are in the <strong><em>{percentile}th</em></strong> percentile</div>\n                        <div>A total number of {perc.length} people have taken this quiz</div>\n                        <div>Add number of people that had the same score as you <strong>{}</strong> </div>\n\n                        <div className=\"chart\">\n                            <Chart \n                            classAverage={classAverage}\n                            score={score}\n                            nQuestions={allQuestions.length}\n                            />\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"container center\">\n                        <h4 className=\"right-align\">Your score is {score} / {allQuestions.length} </h4>\n                        <h4>Question {currentQuestion + 1} of {allQuestions.length}</h4>\n                        <div className=\"container center\"></div>\n                        <div className=\"card amber\">\n                            <div className=\"card-content\">{allQuestions[currentQuestion]}</div>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n        </div>\n        )\n}\n\nexport default ViewQuiz;","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nfunction CreatedQuiz(props) {\n\n    const handleLink = () => {\n        props.history.push(`quiz/${props.id}`)\n    }\n\n\n    return (\n        <div className=\"container\" onClick={handleLink}>\n            <h2>Quiz has been created</h2>\n        </div>\n    )\n}\n\nexport default CreatedQuiz","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport firebase from './firebase'\nimport './App.css'\nimport CreatedQuiz from './CreatedQuiz'\n\n\nfunction AddQuestions(props) {\n    let { id } = useParams()\n\n    const [newQuestion, setNewQuestion] = useState('')\n    const [options, setOptions] = useState(['', ''])\n    const [correct, setCorrect] = useState('')\n    const [addedQuestions, setAddedQuestions] = useState([])\n    const [numberOfQuestions, setNumberOfQuestions] = useState(0)   // track number of questions that have been added to the quiz\n    const [createQuiz, setCreateQuiz] = useState('false')\n\n\n    // make reference to database in firestore\n    const questionDB = firebase.firestore()\n\n    const handleAddNextQuestion = (e) => {\n        e.preventDefault();\n        const count = numberOfQuestions + 1\n        setNumberOfQuestions(count)\n        questionDB.collection(`quizzes/${id}/questions`).add({      // in firestore, point to the id just created and add to questions collection\n            question: newQuestion,\n            options: options,\n            correct: correct\n        }).then(doc => {\n            setNewQuestion('');\n            setOptions(['']);\n            setCorrect('')\n        })\n    }\n\n    useEffect(() => {\n        questionDB.collection(`quizzes/${id}/questions`).onSnapshot((snap) => {\n           setAddedQuestions(snap.docs.map(doc => doc.data()))\n           });\n        }, [])\n\n    // display added questions on the page\n    let displayAddedQuestions = addedQuestions.map(q => <p>{q.question}</p>)\n\n    let updateOption = (s, i) => {\n        let copyOptions = [...options]\n        copyOptions[i] = s\n        setOptions(copyOptions)\n    } \n\n    let removeOption = (e) => {\n        e.preventDefault()\n        let copyOptions = [...options]\n        copyOptions.pop()\n        setOptions(copyOptions)\n    }\n\n    const showThis = <h6>Your quiz can be found at localhost:3000/quiz/{id} or <a target=\"_blank\" href={`localhost:3000/quiz/${id}`}>by using this link</a> </h6>\n\n    if (!createQuiz) {\n        return <CreatedQuiz />\n    }\n\n    let optionElements = options.map((option, i) => <em> <input onChange={(e) => updateOption(e.target.value, i)} value ={option} /> </em>)\n\n    return (\n        <div className=\"container\">\n            <form id=\"addquestions-form\" onSubmit={handleAddNextQuestion}>\n                <h6 className=\"right-align\">Number of questions added {addedQuestions.length}</h6>\n                <br />\n                <div className=\"card\">\n                    <h6>Question</h6><textarea name=\"Question\" placeholder=\"Enter question here\" onChange={e => setNewQuestion(e.target.value)} value={newQuestion}></textarea>\n                </div>\n                \n                <div className=\"card\">\n                    <h6>Type your Options/Choices below</h6><p>{optionElements}</p>\n                    \n                    <p className=\"grey-text\">Add another option? &nbsp;\n                    <button className=\"btn-floating pulse\" onClick={(e) => {\n                        e.preventDefault();\n                        setOptions([...options, ''])}}>+\n                        </button>\n                    </p>\n                    <p className=\"grey-text\">Remove last option? &nbsp; \n                        <button className=\"btn-floating pulse red\" onClick={removeOption}>-</button>\n                    </p>\n\n                    <input name=\"correct\" placeholder=\"Enter correct option here\" onChange={e => setCorrect(e.target.value)} value={correct}></input>\n                    <br /> <br />\n                </div>\n                \n                {/* NOTE TO SELF... TO MAKE THE QUESTIONS DISPLAY IN THE MOST RECENT ADDED QUESTION ORDER, USE created_at STAMP */}\n                {/* CAN USE - created_at: firebase.firestore.Timestamp.fromDate(now), where now = new Date() */}\n                <div>{displayAddedQuestions}</div>\n\n                <br />\n\n                <button className=\"btn waves-effect waves-light\">Add Next Question</button> &nbsp;\n                <button className=\"btn waves-effect waves-light\" onClick={() => setCreateQuiz(true) } >Create Quiz</button>\n\n                {/* AFTER SUBMITTING CREATE QUIZ, THANK USER & DISPLAY LINK TO THEIR JUST ADDED QUIZ */}\n\n            </form>\n        </div>\n    )\n}\n\nexport default AddQuestions;","import React from 'react'\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\nimport ListQuizzes from './ListQuizzes'\nimport NewQuiz from './NewQuiz'\nimport ViewQuiz from './ViewQuiz'\nimport AddQuestions from './AddQuestions'\nimport './App.css'\n\nfunction Navbar() {\n\n    return (\n        <div>\n            <BrowserRouter basename=\"/\">\n            <nav>\n                <div className=\"nav-wrapper teal\">\n                    <div className=\"container red\">\n                        <a href=\"/\" class=\"brand-logo left-align\">Kweez</a>\n                        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                            <li><Link to=\"/\"> Take Quiz </Link></li>\n                            <li><Link to=\"/newquiz\">Create Quiz</Link></li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n            \n                <div className=\"app collection center\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Link className=\"link\" to=\"/newquiz\"></Link>\n                            <ListQuizzes className=\"listquizzes\" />\n                        </Route>\n\n                        <Route path=\"/quiz/:id\" >\n                            <ViewQuiz />\n                            <br />\n                            <Link to=\"/\" className=\"link\"><em className=\"teal-text\">Home</em></Link>\n                        </Route>\n\n                        <Route exact path=\"/newquiz\">\n                            <NewQuiz />\n                            <br />\n                            <Link to=\"/\" className=\"link\"><em className=\"teal-text\">Cancel</em></Link>\n                        </Route>\n\n                        <Route exact path=\"/newquiz/:id/addquestions\">\n                            <AddQuestions />\n                        </Route>\n\n                    </Switch>\n                </div>\n            </BrowserRouter>\n\n        <div className=\"footer-fixed\">\n            <footer className=\"page-footer teal lighten-3\" style={{position:\"fixed\", bottom: 0, left:0, width:\"100%\"}} >\n                <div className=\"container center\">\n                    <div>&copy; 2020 Kweez App</div>\n                </div>\n            </footer>\n        </div>\n        \n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport Navbar from './Navbar';\n\n\nfunction App() {\n\n\n  return (\n    <div>\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}